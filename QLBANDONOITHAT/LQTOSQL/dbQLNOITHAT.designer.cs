#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLBANDONOITHAT.LQTOSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_NOITHAT")]
	public partial class dbQLNOITHATDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAOHANH(BAOHANH instance);
    partial void UpdateBAOHANH(BAOHANH instance);
    partial void DeleteBAOHANH(BAOHANH instance);
    partial void InsertTHAMSOTUOI(THAMSOTUOI instance);
    partial void UpdateTHAMSOTUOI(THAMSOTUOI instance);
    partial void DeleteTHAMSOTUOI(THAMSOTUOI instance);
    partial void InsertCAPMA(CAPMA instance);
    partial void UpdateCAPMA(CAPMA instance);
    partial void DeleteCAPMA(CAPMA instance);
    partial void InsertCTPN(CTPN instance);
    partial void UpdateCTPN(CTPN instance);
    partial void DeleteCTPN(CTPN instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertCHITIETKHO(CHITIETKHO instance);
    partial void UpdateCHITIETKHO(CHITIETKHO instance);
    partial void DeleteCHITIETKHO(CHITIETKHO instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHO(KHO instance);
    partial void UpdateKHO(KHO instance);
    partial void DeleteKHO(KHO instance);
    partial void InsertLOAI_MH(LOAI_MH instance);
    partial void UpdateLOAI_MH(LOAI_MH instance);
    partial void DeleteLOAI_MH(LOAI_MH instance);
    partial void InsertLOGIN(LOGIN instance);
    partial void UpdateLOGIN(LOGIN instance);
    partial void DeleteLOGIN(LOGIN instance);
    partial void InsertLUONG(LUONG instance);
    partial void UpdateLUONG(LUONG instance);
    partial void DeleteLUONG(LUONG instance);
    partial void InsertMATHANG(MATHANG instance);
    partial void UpdateMATHANG(MATHANG instance);
    partial void DeleteMATHANG(MATHANG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertTHAMSOGIOITINH(THAMSOGIOITINH instance);
    partial void UpdateTHAMSOGIOITINH(THAMSOGIOITINH instance);
    partial void DeleteTHAMSOGIOITINH(THAMSOGIOITINH instance);
    #endregion
		
		public dbQLNOITHATDataContext() : 
				base(global::QLBANDONOITHAT.Properties.Settings.Default.QL_NOITHATConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLNOITHATDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLNOITHATDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLNOITHATDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLNOITHATDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAOHANH> BAOHANHs
		{
			get
			{
				return this.GetTable<BAOHANH>();
			}
		}
		
		public System.Data.Linq.Table<THAMSOTUOI> THAMSOTUOIs
		{
			get
			{
				return this.GetTable<THAMSOTUOI>();
			}
		}
		
		public System.Data.Linq.Table<CAPMA> CAPMAs
		{
			get
			{
				return this.GetTable<CAPMA>();
			}
		}
		
		public System.Data.Linq.Table<CTPN> CTPNs
		{
			get
			{
				return this.GetTable<CTPN>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKHO> CHITIETKHOs
		{
			get
			{
				return this.GetTable<CHITIETKHO>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHO> KHOs
		{
			get
			{
				return this.GetTable<KHO>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_MH> LOAI_MHs
		{
			get
			{
				return this.GetTable<LOAI_MH>();
			}
		}
		
		public System.Data.Linq.Table<LOGIN> LOGINs
		{
			get
			{
				return this.GetTable<LOGIN>();
			}
		}
		
		public System.Data.Linq.Table<LUONG> LUONGs
		{
			get
			{
				return this.GetTable<LUONG>();
			}
		}
		
		public System.Data.Linq.Table<MATHANG> MATHANGs
		{
			get
			{
				return this.GetTable<MATHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<THAMSOGIOITINH> THAMSOGIOITINHs
		{
			get
			{
				return this.GetTable<THAMSOGIOITINH>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SLTON")]
		public int SLTON([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SOLUONG_KHO", DbType="Int")] System.Nullable<int> sOLUONG_KHO, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SOLUONGNHAP", DbType="Int")] System.Nullable<int> sOLUONGNHAP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MAMH", DbType="VarChar(15)")] string mAMH)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sOLUONG_KHO, sOLUONGNHAP, mAMH);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAOHANH")]
	public partial class BAOHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOPBH;
		
		private string _SOHD;
		
		private string _MAMH;
		
		private System.Nullable<int> _TG_BAOHANH;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<MATHANG> _MATHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOPBHChanging(string value);
    partial void OnSOPBHChanged();
    partial void OnSOHDChanging(string value);
    partial void OnSOHDChanged();
    partial void OnMAMHChanging(string value);
    partial void OnMAMHChanged();
    partial void OnTG_BAOHANHChanging(System.Nullable<int> value);
    partial void OnTG_BAOHANHChanged();
    #endregion
		
		public BAOHANH()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._MATHANG = default(EntityRef<MATHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOPBH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOPBH
		{
			get
			{
				return this._SOPBH;
			}
			set
			{
				if ((this._SOPBH != value))
				{
					this.OnSOPBHChanging(value);
					this.SendPropertyChanging();
					this._SOPBH = value;
					this.SendPropertyChanged("SOPBH");
					this.OnSOPBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOHD", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOHD
		{
			get
			{
				return this._SOHD;
			}
			set
			{
				if ((this._SOHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOHDChanging(value);
					this.SendPropertyChanging();
					this._SOHD = value;
					this.SendPropertyChanged("SOHD");
					this.OnSOHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMH
		{
			get
			{
				return this._MAMH;
			}
			set
			{
				if ((this._MAMH != value))
				{
					if (this._MATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMHChanging(value);
					this.SendPropertyChanging();
					this._MAMH = value;
					this.SendPropertyChanged("MAMH");
					this.OnMAMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TG_BAOHANH", DbType="Int")]
		public System.Nullable<int> TG_BAOHANH
		{
			get
			{
				return this._TG_BAOHANH;
			}
			set
			{
				if ((this._TG_BAOHANH != value))
				{
					this.OnTG_BAOHANHChanging(value);
					this.SendPropertyChanging();
					this._TG_BAOHANH = value;
					this.SendPropertyChanged("TG_BAOHANH");
					this.OnTG_BAOHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_BAOHANH", Storage="_HOADON", ThisKey="SOHD", OtherKey="SOHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.BAOHANHs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.BAOHANHs.Add(this);
						this._SOHD = value.SOHD;
					}
					else
					{
						this._SOHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_BAOHANH", Storage="_MATHANG", ThisKey="MAMH", OtherKey="MAMH", IsForeignKey=true)]
		public MATHANG MATHANG
		{
			get
			{
				return this._MATHANG.Entity;
			}
			set
			{
				MATHANG previousValue = this._MATHANG.Entity;
				if (((previousValue != value) 
							|| (this._MATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATHANG.Entity = null;
						previousValue.BAOHANHs.Remove(this);
					}
					this._MATHANG.Entity = value;
					if ((value != null))
					{
						value.BAOHANHs.Add(this);
						this._MAMH = value.MAMH;
					}
					else
					{
						this._MAMH = default(string);
					}
					this.SendPropertyChanged("MATHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSOTUOI")]
	public partial class THAMSOTUOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private System.Nullable<int> _DOTUOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnDOTUOIChanging(System.Nullable<int> value);
    partial void OnDOTUOIChanged();
    #endregion
		
		public THAMSOTUOI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOTUOI", DbType="Int")]
		public System.Nullable<int> DOTUOI
		{
			get
			{
				return this._DOTUOI;
			}
			set
			{
				if ((this._DOTUOI != value))
				{
					this.OnDOTUOIChanging(value);
					this.SendPropertyChanging();
					this._DOTUOI = value;
					this.SendPropertyChanged("DOTUOI");
					this.OnDOTUOIChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAPMA")]
	public partial class CAPMA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _KIHIEU;
		
		private System.Nullable<int> _KISO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnKIHIEUChanging(string value);
    partial void OnKIHIEUChanged();
    partial void OnKISOChanging(System.Nullable<int> value);
    partial void OnKISOChanged();
    #endregion
		
		public CAPMA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KIHIEU", DbType="VarChar(15)")]
		public string KIHIEU
		{
			get
			{
				return this._KIHIEU;
			}
			set
			{
				if ((this._KIHIEU != value))
				{
					this.OnKIHIEUChanging(value);
					this.SendPropertyChanging();
					this._KIHIEU = value;
					this.SendPropertyChanged("KIHIEU");
					this.OnKIHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KISO", DbType="Int")]
		public System.Nullable<int> KISO
		{
			get
			{
				return this._KISO;
			}
			set
			{
				if ((this._KISO != value))
				{
					this.OnKISOChanging(value);
					this.SendPropertyChanging();
					this._KISO = value;
					this.SendPropertyChanged("KISO");
					this.OnKISOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPN")]
	public partial class CTPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPN;
		
		private string _MAMH;
		
		private System.Nullable<int> _SLNHAP;
		
		private System.Nullable<double> _GIAMUA;
		
		private EntityRef<MATHANG> _MATHANG;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnMAMHChanging(string value);
    partial void OnMAMHChanged();
    partial void OnSLNHAPChanging(System.Nullable<int> value);
    partial void OnSLNHAPChanged();
    partial void OnGIAMUAChanging(System.Nullable<double> value);
    partial void OnGIAMUAChanged();
    #endregion
		
		public CTPN()
		{
			this._MATHANG = default(EntityRef<MATHANG>);
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMH
		{
			get
			{
				return this._MAMH;
			}
			set
			{
				if ((this._MAMH != value))
				{
					if (this._MATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMHChanging(value);
					this.SendPropertyChanging();
					this._MAMH = value;
					this.SendPropertyChanged("MAMH");
					this.OnMAMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLNHAP", DbType="Int")]
		public System.Nullable<int> SLNHAP
		{
			get
			{
				return this._SLNHAP;
			}
			set
			{
				if ((this._SLNHAP != value))
				{
					this.OnSLNHAPChanging(value);
					this.SendPropertyChanging();
					this._SLNHAP = value;
					this.SendPropertyChanged("SLNHAP");
					this.OnSLNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAMUA", DbType="Float")]
		public System.Nullable<double> GIAMUA
		{
			get
			{
				return this._GIAMUA;
			}
			set
			{
				if ((this._GIAMUA != value))
				{
					this.OnGIAMUAChanging(value);
					this.SendPropertyChanging();
					this._GIAMUA = value;
					this.SendPropertyChanged("GIAMUA");
					this.OnGIAMUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CTPN", Storage="_MATHANG", ThisKey="MAMH", OtherKey="MAMH", IsForeignKey=true)]
		public MATHANG MATHANG
		{
			get
			{
				return this._MATHANG.Entity;
			}
			set
			{
				MATHANG previousValue = this._MATHANG.Entity;
				if (((previousValue != value) 
							|| (this._MATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATHANG.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._MATHANG.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._MAMH = value.MAMH;
					}
					else
					{
						this._MAMH = default(string);
					}
					this.SendPropertyChanged("MATHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CTPN", Storage="_PHIEUNHAP", ThisKey="MAPN", OtherKey="MAPN", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._MAPN = value.MAPN;
					}
					else
					{
						this._MAPN = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOHD;
		
		private string _MAMH;
		
		private System.Nullable<int> _SOLUONGMUA;
		
		private System.Nullable<double> _DONGIA;
		
		private System.Nullable<double> _THUEVAT;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<MATHANG> _MATHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOHDChanging(string value);
    partial void OnSOHDChanged();
    partial void OnMAMHChanging(string value);
    partial void OnMAMHChanged();
    partial void OnSOLUONGMUAChanging(System.Nullable<int> value);
    partial void OnSOLUONGMUAChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    partial void OnTHUEVATChanging(System.Nullable<double> value);
    partial void OnTHUEVATChanged();
    #endregion
		
		public CTHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._MATHANG = default(EntityRef<MATHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOHD", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOHD
		{
			get
			{
				return this._SOHD;
			}
			set
			{
				if ((this._SOHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOHDChanging(value);
					this.SendPropertyChanging();
					this._SOHD = value;
					this.SendPropertyChanged("SOHD");
					this.OnSOHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMH
		{
			get
			{
				return this._MAMH;
			}
			set
			{
				if ((this._MAMH != value))
				{
					if (this._MATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMHChanging(value);
					this.SendPropertyChanging();
					this._MAMH = value;
					this.SendPropertyChanged("MAMH");
					this.OnMAMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGMUA", DbType="Int")]
		public System.Nullable<int> SOLUONGMUA
		{
			get
			{
				return this._SOLUONGMUA;
			}
			set
			{
				if ((this._SOLUONGMUA != value))
				{
					this.OnSOLUONGMUAChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGMUA = value;
					this.SendPropertyChanged("SOLUONGMUA");
					this.OnSOLUONGMUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THUEVAT", DbType="Float")]
		public System.Nullable<double> THUEVAT
		{
			get
			{
				return this._THUEVAT;
			}
			set
			{
				if ((this._THUEVAT != value))
				{
					this.OnTHUEVATChanging(value);
					this.SendPropertyChanging();
					this._THUEVAT = value;
					this.SendPropertyChanged("THUEVAT");
					this.OnTHUEVATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_HOADON", ThisKey="SOHD", OtherKey="SOHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._SOHD = value.SOHD;
					}
					else
					{
						this._SOHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CTHD", Storage="_MATHANG", ThisKey="MAMH", OtherKey="MAMH", IsForeignKey=true)]
		public MATHANG MATHANG
		{
			get
			{
				return this._MATHANG.Entity;
			}
			set
			{
				MATHANG previousValue = this._MATHANG.Entity;
				if (((previousValue != value) 
							|| (this._MATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATHANG.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._MATHANG.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAMH = value.MAMH;
					}
					else
					{
						this._MAMH = default(string);
					}
					this.SendPropertyChanged("MATHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKHO")]
	public partial class CHITIETKHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHO;
		
		private string _MAMH;
		
		private System.Nullable<int> _SOLUONG_TONKHO;
		
		private EntityRef<KHO> _KHO;
		
		private EntityRef<MATHANG> _MATHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOChanging(string value);
    partial void OnMAKHOChanged();
    partial void OnMAMHChanging(string value);
    partial void OnMAMHChanged();
    partial void OnSOLUONG_TONKHOChanging(System.Nullable<int> value);
    partial void OnSOLUONG_TONKHOChanged();
    #endregion
		
		public CHITIETKHO()
		{
			this._KHO = default(EntityRef<KHO>);
			this._MATHANG = default(EntityRef<MATHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHO", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHO
		{
			get
			{
				return this._MAKHO;
			}
			set
			{
				if ((this._MAKHO != value))
				{
					if (this._KHO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHOChanging(value);
					this.SendPropertyChanging();
					this._MAKHO = value;
					this.SendPropertyChanged("MAKHO");
					this.OnMAKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMH
		{
			get
			{
				return this._MAMH;
			}
			set
			{
				if ((this._MAMH != value))
				{
					if (this._MATHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMHChanging(value);
					this.SendPropertyChanging();
					this._MAMH = value;
					this.SendPropertyChanged("MAMH");
					this.OnMAMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG_TONKHO", DbType="Int")]
		public System.Nullable<int> SOLUONG_TONKHO
		{
			get
			{
				return this._SOLUONG_TONKHO;
			}
			set
			{
				if ((this._SOLUONG_TONKHO != value))
				{
					this.OnSOLUONG_TONKHOChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG_TONKHO = value;
					this.SendPropertyChanged("SOLUONG_TONKHO");
					this.OnSOLUONG_TONKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_CHITIETKHO", Storage="_KHO", ThisKey="MAKHO", OtherKey="MAKHO", IsForeignKey=true)]
		public KHO KHO
		{
			get
			{
				return this._KHO.Entity;
			}
			set
			{
				KHO previousValue = this._KHO.Entity;
				if (((previousValue != value) 
							|| (this._KHO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHO.Entity = null;
						previousValue.CHITIETKHOs.Remove(this);
					}
					this._KHO.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHOs.Add(this);
						this._MAKHO = value.MAKHO;
					}
					else
					{
						this._MAKHO = default(string);
					}
					this.SendPropertyChanged("KHO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CHITIETKHO", Storage="_MATHANG", ThisKey="MAMH", OtherKey="MAMH", IsForeignKey=true)]
		public MATHANG MATHANG
		{
			get
			{
				return this._MATHANG.Entity;
			}
			set
			{
				MATHANG previousValue = this._MATHANG.Entity;
				if (((previousValue != value) 
							|| (this._MATHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MATHANG.Entity = null;
						previousValue.CHITIETKHOs.Remove(this);
					}
					this._MATHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHOs.Add(this);
						this._MAMH = value.MAMH;
					}
					else
					{
						this._MAMH = default(string);
					}
					this.SendPropertyChanged("MATHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOHD;
		
		private System.Nullable<System.DateTime> _NGAYLAP_HD;
		
		private System.Nullable<double> _TONGTG;
		
		private string _TT_THANHTOAN;
		
		private string _MAKH;
		
		private string _MANV;
		
		private EntitySet<BAOHANH> _BAOHANHs;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOHDChanging(string value);
    partial void OnSOHDChanged();
    partial void OnNGAYLAP_HDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAP_HDChanged();
    partial void OnTONGTGChanging(System.Nullable<double> value);
    partial void OnTONGTGChanged();
    partial void OnTT_THANHTOANChanging(string value);
    partial void OnTT_THANHTOANChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public HOADON()
		{
			this._BAOHANHs = new EntitySet<BAOHANH>(new Action<BAOHANH>(this.attach_BAOHANHs), new Action<BAOHANH>(this.detach_BAOHANHs));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOHD", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOHD
		{
			get
			{
				return this._SOHD;
			}
			set
			{
				if ((this._SOHD != value))
				{
					this.OnSOHDChanging(value);
					this.SendPropertyChanging();
					this._SOHD = value;
					this.SendPropertyChanged("SOHD");
					this.OnSOHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP_HD", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP_HD
		{
			get
			{
				return this._NGAYLAP_HD;
			}
			set
			{
				if ((this._NGAYLAP_HD != value))
				{
					this.OnNGAYLAP_HDChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP_HD = value;
					this.SendPropertyChanged("NGAYLAP_HD");
					this.OnNGAYLAP_HDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTG", DbType="Float")]
		public System.Nullable<double> TONGTG
		{
			get
			{
				return this._TONGTG;
			}
			set
			{
				if ((this._TONGTG != value))
				{
					this.OnTONGTGChanging(value);
					this.SendPropertyChanging();
					this._TONGTG = value;
					this.SendPropertyChanged("TONGTG");
					this.OnTONGTGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TT_THANHTOAN", DbType="NVarChar(35)")]
		public string TT_THANHTOAN
		{
			get
			{
				return this._TT_THANHTOAN;
			}
			set
			{
				if ((this._TT_THANHTOAN != value))
				{
					this.OnTT_THANHTOANChanging(value);
					this.SendPropertyChanging();
					this._TT_THANHTOAN = value;
					this.SendPropertyChanged("TT_THANHTOAN");
					this.OnTT_THANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(15)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_BAOHANH", Storage="_BAOHANHs", ThisKey="SOHD", OtherKey="SOHD")]
		public EntitySet<BAOHANH> BAOHANHs
		{
			get
			{
				return this._BAOHANHs;
			}
			set
			{
				this._BAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_CTHDs", ThisKey="SOHD", OtherKey="SOHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _GIOITINH_KH;
		
		private string _DIACHI_KH;
		
		private string _DIENTHOAI_KH;
		
		private string _EMAIL;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnGIOITINH_KHChanging(string value);
    partial void OnGIOITINH_KHChanged();
    partial void OnDIACHI_KHChanging(string value);
    partial void OnDIACHI_KHChanged();
    partial void OnDIENTHOAI_KHChanging(string value);
    partial void OnDIENTHOAI_KHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH_KH", DbType="NVarChar(8)")]
		public string GIOITINH_KH
		{
			get
			{
				return this._GIOITINH_KH;
			}
			set
			{
				if ((this._GIOITINH_KH != value))
				{
					this.OnGIOITINH_KHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH_KH = value;
					this.SendPropertyChanged("GIOITINH_KH");
					this.OnGIOITINH_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_KH", DbType="NVarChar(100)")]
		public string DIACHI_KH
		{
			get
			{
				return this._DIACHI_KH;
			}
			set
			{
				if ((this._DIACHI_KH != value))
				{
					this.OnDIACHI_KHChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_KH = value;
					this.SendPropertyChanged("DIACHI_KH");
					this.OnDIACHI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI_KH", DbType="VarChar(15)")]
		public string DIENTHOAI_KH
		{
			get
			{
				return this._DIENTHOAI_KH;
			}
			set
			{
				if ((this._DIENTHOAI_KH != value))
				{
					this.OnDIENTHOAI_KHChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI_KH = value;
					this.SendPropertyChanged("DIENTHOAI_KH");
					this.OnDIENTHOAI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(30)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHO")]
	public partial class KHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHO;
		
		private string _TENKHO;
		
		private string _DIACHI_KHO;
		
		private EntitySet<CHITIETKHO> _CHITIETKHOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHOChanging(string value);
    partial void OnMAKHOChanged();
    partial void OnTENKHOChanging(string value);
    partial void OnTENKHOChanged();
    partial void OnDIACHI_KHOChanging(string value);
    partial void OnDIACHI_KHOChanged();
    #endregion
		
		public KHO()
		{
			this._CHITIETKHOs = new EntitySet<CHITIETKHO>(new Action<CHITIETKHO>(this.attach_CHITIETKHOs), new Action<CHITIETKHO>(this.detach_CHITIETKHOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHO", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHO
		{
			get
			{
				return this._MAKHO;
			}
			set
			{
				if ((this._MAKHO != value))
				{
					this.OnMAKHOChanging(value);
					this.SendPropertyChanging();
					this._MAKHO = value;
					this.SendPropertyChanged("MAKHO");
					this.OnMAKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHO", DbType="NVarChar(50)")]
		public string TENKHO
		{
			get
			{
				return this._TENKHO;
			}
			set
			{
				if ((this._TENKHO != value))
				{
					this.OnTENKHOChanging(value);
					this.SendPropertyChanging();
					this._TENKHO = value;
					this.SendPropertyChanged("TENKHO");
					this.OnTENKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_KHO", DbType="NVarChar(100)")]
		public string DIACHI_KHO
		{
			get
			{
				return this._DIACHI_KHO;
			}
			set
			{
				if ((this._DIACHI_KHO != value))
				{
					this.OnDIACHI_KHOChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_KHO = value;
					this.SendPropertyChanged("DIACHI_KHO");
					this.OnDIACHI_KHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHO_CHITIETKHO", Storage="_CHITIETKHOs", ThisKey="MAKHO", OtherKey="MAKHO")]
		public EntitySet<CHITIETKHO> CHITIETKHOs
		{
			get
			{
				return this._CHITIETKHOs;
			}
			set
			{
				this._CHITIETKHOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKHOs(CHITIETKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = this;
		}
		
		private void detach_CHITIETKHOs(CHITIETKHO entity)
		{
			this.SendPropertyChanging();
			entity.KHO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_MH")]
	public partial class LOAI_MH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<MATHANG> _MATHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAI_MH()
		{
			this._MATHANGs = new EntitySet<MATHANG>(new Action<MATHANG>(this.attach_MATHANGs), new Action<MATHANG>(this.detach_MATHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(15)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_MH_MATHANG", Storage="_MATHANGs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<MATHANG> MATHANGs
		{
			get
			{
				return this._MATHANGs;
			}
			set
			{
				this._MATHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MATHANGs(MATHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_MH = this;
		}
		
		private void detach_MATHANGs(MATHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_MH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOGIN")]
	public partial class LOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENDN;
		
		private string _PASS;
		
		private System.Nullable<int> _PHANQUYEN;
		
		private string _GHICHU;
		
		private string _MANV;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnPASSChanging(string value);
    partial void OnPASSChanged();
    partial void OnPHANQUYENChanging(System.Nullable<int> value);
    partial void OnPHANQUYENChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    #endregion
		
		public LOGIN()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASS", DbType="VarChar(15)")]
		public string PASS
		{
			get
			{
				return this._PASS;
			}
			set
			{
				if ((this._PASS != value))
				{
					this.OnPASSChanging(value);
					this.SendPropertyChanging();
					this._PASS = value;
					this.SendPropertyChanged("PASS");
					this.OnPASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHANQUYEN", DbType="Int")]
		public System.Nullable<int> PHANQUYEN
		{
			get
			{
				return this._PHANQUYEN;
			}
			set
			{
				if ((this._PHANQUYEN != value))
				{
					this.OnPHANQUYENChanging(value);
					this.SendPropertyChanging();
					this._PHANQUYEN = value;
					this.SendPropertyChanged("PHANQUYEN");
					this.OnPHANQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LOGIN", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.LOGINs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.LOGINs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUONG")]
	public partial class LUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALUONG;
		
		private System.Nullable<double> _LUONGCB;
		
		private System.Nullable<double> _LUONGPC;
		
		private System.Nullable<double> _HESOLUONG;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALUONGChanging(string value);
    partial void OnMALUONGChanged();
    partial void OnLUONGCBChanging(System.Nullable<double> value);
    partial void OnLUONGCBChanged();
    partial void OnLUONGPCChanging(System.Nullable<double> value);
    partial void OnLUONGPCChanged();
    partial void OnHESOLUONGChanging(System.Nullable<double> value);
    partial void OnHESOLUONGChanged();
    #endregion
		
		public LUONG()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALUONG", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALUONG
		{
			get
			{
				return this._MALUONG;
			}
			set
			{
				if ((this._MALUONG != value))
				{
					this.OnMALUONGChanging(value);
					this.SendPropertyChanging();
					this._MALUONG = value;
					this.SendPropertyChanged("MALUONG");
					this.OnMALUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONGCB", DbType="Float")]
		public System.Nullable<double> LUONGCB
		{
			get
			{
				return this._LUONGCB;
			}
			set
			{
				if ((this._LUONGCB != value))
				{
					this.OnLUONGCBChanging(value);
					this.SendPropertyChanging();
					this._LUONGCB = value;
					this.SendPropertyChanged("LUONGCB");
					this.OnLUONGCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONGPC", DbType="Float")]
		public System.Nullable<double> LUONGPC
		{
			get
			{
				return this._LUONGPC;
			}
			set
			{
				if ((this._LUONGPC != value))
				{
					this.OnLUONGPCChanging(value);
					this.SendPropertyChanging();
					this._LUONGPC = value;
					this.SendPropertyChanged("LUONGPC");
					this.OnLUONGPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HESOLUONG", DbType="Float")]
		public System.Nullable<double> HESOLUONG
		{
			get
			{
				return this._HESOLUONG;
			}
			set
			{
				if ((this._HESOLUONG != value))
				{
					this.OnHESOLUONGChanging(value);
					this.SendPropertyChanging();
					this._HESOLUONG = value;
					this.SendPropertyChanged("HESOLUONG");
					this.OnHESOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUONG_NHANVIEN", Storage="_NHANVIENs", ThisKey="MALUONG", OtherKey="MALUONG")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LUONG = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.LUONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MATHANG")]
	public partial class MATHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMH;
		
		private string _TENMH;
		
		private string _MALOAI;
		
		private string _NOISX;
		
		private System.Nullable<double> _GIABAN;
		
		private System.Nullable<double> _GIAMUA;
		
		private System.Nullable<double> _KHUYENMAI;
		
		private System.Nullable<int> _SLTON;
		
		private string _DVT;
		
		private EntitySet<BAOHANH> _BAOHANHs;
		
		private EntitySet<CTPN> _CTPNs;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntitySet<CHITIETKHO> _CHITIETKHOs;
		
		private EntityRef<LOAI_MH> _LOAI_MH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMHChanging(string value);
    partial void OnMAMHChanged();
    partial void OnTENMHChanging(string value);
    partial void OnTENMHChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnNOISXChanging(string value);
    partial void OnNOISXChanged();
    partial void OnGIABANChanging(System.Nullable<double> value);
    partial void OnGIABANChanged();
    partial void OnGIAMUAChanging(System.Nullable<double> value);
    partial void OnGIAMUAChanged();
    partial void OnKHUYENMAIChanging(System.Nullable<double> value);
    partial void OnKHUYENMAIChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    #endregion
		
		public MATHANG()
		{
			this._BAOHANHs = new EntitySet<BAOHANH>(new Action<BAOHANH>(this.attach_BAOHANHs), new Action<BAOHANH>(this.detach_BAOHANHs));
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._CHITIETKHOs = new EntitySet<CHITIETKHO>(new Action<CHITIETKHO>(this.attach_CHITIETKHOs), new Action<CHITIETKHO>(this.detach_CHITIETKHOs));
			this._LOAI_MH = default(EntityRef<LOAI_MH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMH
		{
			get
			{
				return this._MAMH;
			}
			set
			{
				if ((this._MAMH != value))
				{
					this.OnMAMHChanging(value);
					this.SendPropertyChanging();
					this._MAMH = value;
					this.SendPropertyChanged("MAMH");
					this.OnMAMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMH", DbType="NVarChar(40)")]
		public string TENMH
		{
			get
			{
				return this._TENMH;
			}
			set
			{
				if ((this._TENMH != value))
				{
					this.OnTENMHChanging(value);
					this.SendPropertyChanging();
					this._TENMH = value;
					this.SendPropertyChanged("TENMH");
					this.OnTENMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(15)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAI_MH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOISX", DbType="NVarChar(15)")]
		public string NOISX
		{
			get
			{
				return this._NOISX;
			}
			set
			{
				if ((this._NOISX != value))
				{
					this.OnNOISXChanging(value);
					this.SendPropertyChanging();
					this._NOISX = value;
					this.SendPropertyChanged("NOISX");
					this.OnNOISXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Float")]
		public System.Nullable<double> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAMUA", DbType="Float")]
		public System.Nullable<double> GIAMUA
		{
			get
			{
				return this._GIAMUA;
			}
			set
			{
				if ((this._GIAMUA != value))
				{
					this.OnGIAMUAChanging(value);
					this.SendPropertyChanging();
					this._GIAMUA = value;
					this.SendPropertyChanged("GIAMUA");
					this.OnGIAMUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHUYENMAI", DbType="Float")]
		public System.Nullable<double> KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI;
			}
			set
			{
				if ((this._KHUYENMAI != value))
				{
					this.OnKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._KHUYENMAI = value;
					this.SendPropertyChanged("KHUYENMAI");
					this.OnKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(5)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_BAOHANH", Storage="_BAOHANHs", ThisKey="MAMH", OtherKey="MAMH")]
		public EntitySet<BAOHANH> BAOHANHs
		{
			get
			{
				return this._BAOHANHs;
			}
			set
			{
				this._BAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CTPN", Storage="_CTPNs", ThisKey="MAMH", OtherKey="MAMH")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CTHD", Storage="_CTHDs", ThisKey="MAMH", OtherKey="MAMH")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MATHANG_CHITIETKHO", Storage="_CHITIETKHOs", ThisKey="MAMH", OtherKey="MAMH")]
		public EntitySet<CHITIETKHO> CHITIETKHOs
		{
			get
			{
				return this._CHITIETKHOs;
			}
			set
			{
				this._CHITIETKHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_MH_MATHANG", Storage="_LOAI_MH", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAI_MH LOAI_MH
		{
			get
			{
				return this._LOAI_MH.Entity;
			}
			set
			{
				LOAI_MH previousValue = this._LOAI_MH.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_MH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_MH.Entity = null;
						previousValue.MATHANGs.Remove(this);
					}
					this._LOAI_MH.Entity = value;
					if ((value != null))
					{
						value.MATHANGs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAI_MH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = this;
		}
		
		private void detach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = null;
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = null;
		}
		
		private void attach_CHITIETKHOs(CHITIETKHO entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = this;
		}
		
		private void detach_CHITIETKHOs(CHITIETKHO entity)
		{
			this.SendPropertyChanging();
			entity.MATHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private string _DIACHI_NCC;
		
		private string _SDT_NCC;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHI_NCCChanging(string value);
    partial void OnDIACHI_NCCChanged();
    partial void OnSDT_NCCChanging(string value);
    partial void OnSDT_NCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(35)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_NCC", DbType="NVarChar(100)")]
		public string DIACHI_NCC
		{
			get
			{
				return this._DIACHI_NCC;
			}
			set
			{
				if ((this._DIACHI_NCC != value))
				{
					this.OnDIACHI_NCCChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_NCC = value;
					this.SendPropertyChanged("DIACHI_NCC");
					this.OnDIACHI_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NCC", DbType="VarChar(15)")]
		public string SDT_NCC
		{
			get
			{
				return this._SDT_NCC;
			}
			set
			{
				if ((this._SDT_NCC != value))
				{
					this.OnSDT_NCCChanging(value);
					this.SendPropertyChanging();
					this._SDT_NCC = value;
					this.SendPropertyChanged("SDT_NCC");
					this.OnSDT_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private string _GIOITINH_NV;
		
		private string _DIACHI;
		
		private string _DIENTHOAI_NV;
		
		private System.Nullable<int> _CMND;
		
		private string _MALUONG;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<LOGIN> _LOGINs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntityRef<LUONG> _LUONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnGIOITINH_NVChanging(string value);
    partial void OnGIOITINH_NVChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnDIENTHOAI_NVChanging(string value);
    partial void OnDIENTHOAI_NVChanged();
    partial void OnCMNDChanging(System.Nullable<int> value);
    partial void OnCMNDChanged();
    partial void OnMALUONGChanging(string value);
    partial void OnMALUONGChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._LOGINs = new EntitySet<LOGIN>(new Action<LOGIN>(this.attach_LOGINs), new Action<LOGIN>(this.detach_LOGINs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._LUONG = default(EntityRef<LUONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(35)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH_NV", DbType="NVarChar(10)")]
		public string GIOITINH_NV
		{
			get
			{
				return this._GIOITINH_NV;
			}
			set
			{
				if ((this._GIOITINH_NV != value))
				{
					this.OnGIOITINH_NVChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH_NV = value;
					this.SendPropertyChanged("GIOITINH_NV");
					this.OnGIOITINH_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI_NV", DbType="VarChar(15)")]
		public string DIENTHOAI_NV
		{
			get
			{
				return this._DIENTHOAI_NV;
			}
			set
			{
				if ((this._DIENTHOAI_NV != value))
				{
					this.OnDIENTHOAI_NVChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI_NV = value;
					this.SendPropertyChanged("DIENTHOAI_NV");
					this.OnDIENTHOAI_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int")]
		public System.Nullable<int> CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALUONG", DbType="VarChar(15)")]
		public string MALUONG
		{
			get
			{
				return this._MALUONG;
			}
			set
			{
				if ((this._MALUONG != value))
				{
					if (this._LUONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALUONGChanging(value);
					this.SendPropertyChanging();
					this._MALUONG = value;
					this.SendPropertyChanged("MALUONG");
					this.OnMALUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_LOGIN", Storage="_LOGINs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<LOGIN> LOGINs
		{
			get
			{
				return this._LOGINs;
			}
			set
			{
				this._LOGINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUONG_NHANVIEN", Storage="_LUONG", ThisKey="MALUONG", OtherKey="MALUONG", IsForeignKey=true)]
		public LUONG LUONG
		{
			get
			{
				return this._LUONG.Entity;
			}
			set
			{
				LUONG previousValue = this._LUONG.Entity;
				if (((previousValue != value) 
							|| (this._LUONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LUONG.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._LUONG.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MALUONG = value.MALUONG;
					}
					else
					{
						this._MALUONG = default(string);
					}
					this.SendPropertyChanged("LUONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_LOGINs(LOGIN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_LOGINs(LOGIN entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPN;
		
		private System.Nullable<System.DateTime> _NGAYLAP_PN;
		
		private string _MANV;
		
		private System.Nullable<double> _TONGTG_NHAP;
		
		private string _MANCC;
		
		private EntitySet<CTPN> _CTPNs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnNGAYLAP_PNChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAP_PNChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTONGTG_NHAPChanging(System.Nullable<double> value);
    partial void OnTONGTG_NHAPChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP_PN", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP_PN
		{
			get
			{
				return this._NGAYLAP_PN;
			}
			set
			{
				if ((this._NGAYLAP_PN != value))
				{
					this.OnNGAYLAP_PNChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP_PN = value;
					this.SendPropertyChanged("NGAYLAP_PN");
					this.OnNGAYLAP_PNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="VarChar(15)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTG_NHAP", DbType="Float")]
		public System.Nullable<double> TONGTG_NHAP
		{
			get
			{
				return this._TONGTG_NHAP;
			}
			set
			{
				if ((this._TONGTG_NHAP != value))
				{
					this.OnTONGTG_NHAPChanging(value);
					this.SendPropertyChanging();
					this._TONGTG_NHAP = value;
					this.SendPropertyChanged("TONGTG_NHAP");
					this.OnTONGTG_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(15)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CTPN", Storage="_CTPNs", ThisKey="MAPN", OtherKey="MAPN")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSOGIOITINH")]
	public partial class THAMSOGIOITINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _GIOITINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    #endregion
		
		public THAMSOGIOITINH()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
